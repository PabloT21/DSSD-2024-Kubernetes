# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sorteos-app
  labels:
    app: sorteos-app
spec:
  replicas: 2  # Mínimo 2 réplicas 
  selector:
    matchLabels:
      app: sorteos-app
  template:
    metadata:
      labels:
        app: sorteos-app
    spec:
      containers: # Contenedor de la aplicación
      - name: sorteos-container
        image: pablot21/sorteos-dssd-grupo2:latest
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: "200m"    # Asignación inicial de CPU
            memory: "256Mi" # Asignación inicial de memoria
          limits:
            cpu: "500m"    # Límite máximo de CPU
            memory: "512Mi" # Límite máximo de memoria
        livenessProbe:     # Para verificar que el pod está vivo
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:    # Verificar que el pod está listo para recibir tráfico (mismo EP que el de liveness)
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10

---
# HorizontalPodAutoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sorteos-app-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sorteos-app
  minReplicas: 2    # Mínimo de réplicas requerido
  maxReplicas: 5    # Máximo de réplicas permitido
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60  # Escalar al alcanzar 60% de CPU utilizada

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: sorteos-service
spec:
  type: LoadBalancer    # Establezco el tipo LoadBalancer
  ports:
    - port: 80          # Puerto expuesto externamente
      targetPort: 3000  # Puerto de la aplicación
      protocol: TCP
  selector:
    app: sorteos-app